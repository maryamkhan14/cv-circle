version: "2.19.1"
services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - $PWD/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - users
      - posts
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  users-redis:
    image: redis
    container_name: users-redis
    restart: always

  posts-redis:
    image: redis
    container_name: posts-redis
    restart: always

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    env_file:
      - ./src/apps/messaging/broker/.env

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - broker
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092

  kafka-connect:
    build: ./src/apps/messaging/kafka-connect
    container_name: kafka-connect
    depends_on:
      - broker
      - schema-registry
    ports:
      - 8083:8083
    env_file:
      - ./src/apps/messaging/kafka-connect/.env
    volumes:
      - ./src/apps/messaging/kafka-connect/data:/var/lib/kafka/data
      - ./src/apps/messaging/kafka-connect/secrets:/etc/kafka/secrets
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt redis/redis-enterprise-kafka:6.7.4 
        confluent-hub install --no-prompt jcustenborder/kafka-connect-redis:latest
        /etc/confluent/docker/run &
        /app/connectors-config 8083
        sleep infinity

  ksqldb:
    # *-----------------------------*
    # To connect to ksqlDB CLI
    #   docker exec --interactive --tty ksqldb ksql http://localhost:8088
    # *-----------------------------*
    image: confluentinc/ksqldb-server:0.21.0
    container_name: ksqldb
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker:29092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_STREAMS_PRODUCER_MAX_BLOCK_MS: 9223372036854775807
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      KSQL_KSQL_SERVICE_ID: ksql_service
      KSQL_KSQL_HIDDEN_TOPICS: "^_.*"
  posts:
    build: ./src/apps/posts
    container_name: posts
    depends_on:
      - kafka-connect
      - broker
      - schema-registry
    links:
      - "broker:broker"
    env_file:
      - ./src/apps/posts/.env
    restart: always

  users:
    build: ./src/apps/users
    container_name: users
    links:
      - "users-redis:redis"
    env_file:
      - ./src/apps/users/.env
    restart: always
